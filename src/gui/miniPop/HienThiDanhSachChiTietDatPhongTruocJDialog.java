/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.miniPop;

import bus.PhieuDatPhongBUS;
import dto.PhieuDatPhongDTO;
import gui.ManHinhDanhSachPhongJPanel;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tuan
 */
public class HienThiDanhSachChiTietDatPhongTruocJDialog extends javax.swing.JDialog {

    /**
     * Creates new form HienThiDanhSachChiTietDatPhongTruocJDialog
     */
    static ArrayList<PhieuDatPhongDTO> listPhieuDatPhong;
    static DefaultTableModel dtmPhieuDatPhong;
    static PhieuDatPhongDTO selectedPhieuDatPhongDTO;
    PhieuDatPhongDTO newPhieuDatPhongDTO;

    public HienThiDanhSachChiTietDatPhongTruocJDialog(){
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        yeuCauLayDanhSachDatPhong();
        hienThiDanhSachPhieuDatPhong();
    }
    

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfTimKiem = new javax.swing.JTextField();
        jbtNhanPhong = new javax.swing.JButton();
        jbtHuyDatPhong = new javax.swing.JButton();
        jbtTimKiem = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("DANH SÁCH ĐẶT PHÒNG");

        jbtNhanPhong.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbtNhanPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ok.png"))); // NOI18N
        jbtNhanPhong.setText("Nhận phòng");
        jbtNhanPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNhanPhongActionPerformed(evt);
            }
        });

        jbtHuyDatPhong.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbtHuyDatPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Xoa.png"))); // NOI18N
        jbtHuyDatPhong.setText("Hủy đặt phòng");
        jbtHuyDatPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtHuyDatPhongActionPerformed(evt);
            }
        });

        jbtTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbtTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/TimKiem.png"))); // NOI18N
        jbtTimKiem.setText("Tìm kiếm");
        jbtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jbtTimKiem)
                .addGap(18, 18, 18)
                .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(135, 135, 135)
                .addComponent(jbtNhanPhong)
                .addGap(42, 42, 42)
                .addComponent(jbtHuyDatPhong)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtNhanPhong)
                    .addComponent(jbtHuyDatPhong)
                    .addComponent(jbtTimKiem))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên khách hàng", "Tên nhân viên", "Mã phòng", "Ngày đặt", "Ngày đến", "Ngày đi"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtTimKiemActionPerformed
        if (jtfTimKiem.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Nhập thông tin cần tìm kiếm");
        }    
        else{
        yeuCauTimKiemPhieuDatPhong(jtfTimKiem.getText());
            if (yeuCauLayDanhSachDatPhong()==false){
                JOptionPane.showMessageDialog(null, "Không tìm thấy kết quả");
            }
            else
            hienThiDanhSachPhieuDatPhong();
        }
    }//GEN-LAST:event_jbtTimKiemActionPerformed

    private void jbtHuyDatPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtHuyDatPhongActionPerformed
        if (selectedPhieuDatPhongDTO==null){
            JOptionPane.showMessageDialog(null, "Vui lòng chọn phiếu cần hủy đặt phòng");
        }
            else
            {
                    int check= JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa phiếu đặt phòng này không?", "Cảnh báo", JOptionPane.YES_NO_OPTION);
          if (check==JOptionPane.YES_OPTION){
              boolean flag=yeuCauHuyPhieuDatPhong();
              if (flag)
                  JOptionPane.showMessageDialog(null, "Xóa thành công");
                  else
                  JOptionPane.showMessageDialog(null, "Xóa thất bại");
              
          }
          else if (check==JOptionPane.NO_OPTION){
              
          }
        }
    }//GEN-LAST:event_jbtHuyDatPhongActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        luuThongTinPhieuDatPhongKhiClick();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbtNhanPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNhanPhongActionPerformed
        yeuCauNhanPhongDaDat();
    }//GEN-LAST:event_jbtNhanPhongActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable jTable1;
    private javax.swing.JButton jbtHuyDatPhong;
    private javax.swing.JButton jbtNhanPhong;
    private javax.swing.JButton jbtTimKiem;
    private javax.swing.JTextField jtfTimKiem;
    // End of variables declaration//GEN-END:variables

    
    
    public static void lamMoiDuLieu(){
        yeuCauLayDanhSachDatPhong();
        hienThiDanhSachPhieuDatPhong();
    }
        
    private static void hienThiDanhSachPhieuDatPhong(){
        dtmPhieuDatPhong=(DefaultTableModel) jTable1.getModel();
        dtmPhieuDatPhong.setRowCount(0);
        for (PhieuDatPhongDTO phieuDatPhongDTO:listPhieuDatPhong){
            Vector<Object> vec=new Vector<>();

            vec.add(phieuDatPhongDTO.getTenKH());
            vec.add(phieuDatPhongDTO.getTenNV());
            vec.add(phieuDatPhongDTO.getMaPhong());
            vec.add(phieuDatPhongDTO.getNgayDat());
            vec.add(phieuDatPhongDTO.getNgayDen());
            vec.add(phieuDatPhongDTO.getNgayDi());
            dtmPhieuDatPhong.addRow(vec);
        }
        jTable1.setModel(dtmPhieuDatPhong);
    }
    
    private static boolean yeuCauLayDanhSachDatPhong(){
        listPhieuDatPhong=new ArrayList<>();
        listPhieuDatPhong=PhieuDatPhongBUS.layThongTinPhieuDatPhong();
        if(listPhieuDatPhong.size()<=0)
            return false;
        else
            return true;
    }
    
    private void yeuCauTimKiemPhieuDatPhong(String tuKhoa){
        listPhieuDatPhong=PhieuDatPhongBUS.timKiemPhieuDatPhong(tuKhoa);
    }

    private void luuThongTinPhieuDatPhongKhiClick() {
       selectedPhieuDatPhongDTO=new PhieuDatPhongDTO();
        int selectedRow=jTable1.getSelectedRow();
        if (selectedRow==-1)
            return;
        else
            selectedPhieuDatPhongDTO=listPhieuDatPhong.get(selectedRow);
    }

    private boolean yeuCauHuyPhieuDatPhong() {
        boolean flag=PhieuDatPhongBUS.huyDatPhong(selectedPhieuDatPhongDTO.getMaPhieu());
              lamMoiDuLieu();
              return flag;
         }

    private void yeuCauNhanPhongDaDat() {
        if (selectedPhieuDatPhongDTO==null)
            JOptionPane.showMessageDialog(null, "Chọn phiếu đặt phòng muốn nhận phòng");
        else{
        
       java.util.Date date=new java.util.Date(); 
        if(selectedPhieuDatPhongDTO.getNgayDen().getTime()>date.getTime()){
            JOptionPane.showMessageDialog(null, "Chưa nhận được phòng");
        }
        else{
            boolean check=PhieuDatPhongBUS.nhanPhongDaDat(selectedPhieuDatPhongDTO);
        if (check){
            JOptionPane.showMessageDialog(null, "Nhận phòng thành công");
            lamMoiDuLieu();
            ManHinhDanhSachPhongJPanel.hienThiDanhSachPhong();
        }
        else
            JOptionPane.showMessageDialog(null, "Nhận phòng thất bại");
            }
        }
    }
}
